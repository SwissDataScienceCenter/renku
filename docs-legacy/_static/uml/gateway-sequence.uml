@startuml

autonumber

!define BLACK   #363D5D
!define RED     #F6363F
!define PINK    #F6216E
!define MAGENTA #A54FBD
!define GREEN   #37A77C
!define YELLOW  #F97A00
!define BLUE    #1E98F2
!define CYAN    #25AFCA
!define WHITE   #FEF2DC

' Base Setting
skinparam Shadowing false
skinparam BackgroundColor white
skinparam ComponentStyle uml2
skinparam Default {
  FontName  'Hiragino Sans'
  FontColor BLACK
  FontSize  20
  FontStyle plain
}

skinparam Sequence {
  ArrowThickness 2
  ArrowColor RED
  ActorBorderThickness 1
  LifeLineBorderColor GREEN
  ParticipantBorderThickness 0
}
skinparam Participant {
  BackgroundColor BLACK
  BorderColor BLACK
  FontColor #FFFFFF
}

skinparam Actor {
  BackgroundColor BLACK
  BorderColor BLACK
}

hide footbox
skinparam shadowing false

participant UI
participant "API Gateway"
participant "Keycloak"
participant "Gitlab/JupyterHub"
database Redis order 10 BLUE

autonumber stop

== User login ==
  group OAuth2 flow
    UI -> "API Gateway": open in browser: /api/auth/login
    activate "API Gateway"

    "API Gateway" -> "Keycloak": redirect
    activate "Keycloak"

    "API Gateway" -[BLUE]> Redis: store state
    deactivate "API Gateway"

    "Keycloak" -> "Keycloak"
    note right: User enters credentials

    "API Gateway" <- "Keycloak": redirect (incl. authorization code)
    deactivate "Keycloak"
    activate "API Gateway"

    group Server-side communication
      "API Gateway" <[BLUE]- Redis: retreive state
      "API Gateway" -> "Keycloak": authorization code
      activate "Keycloak"
      "Keycloak" -> "Keycloak"
      note right: Validate authorization code

      "API Gateway" <- "Keycloak": access token, refresh token, ID token
      deactivate "Keycloak"

      "API Gateway" -[BLUE]> Redis: store access token, refresh token, ID token
    end

    UI <- "API Gateway": redirecting page
    deactivate "API Gateway"
  end

  ...repeat OAuth2 flow for Gitlab and JupyterHub...

== On startup ==
  "API Gateway" <- "Keycloak": Keycloak public key

== Resource access ==
  UI -> "API Gateway": /api/some_resource (session cookie)
  activate "API Gateway"

  "API Gateway" <[BLUE]- Redis: retreive Keycloak and Gitlab/JupyterHub access token
  "API Gateway" -> "API Gateway"
  note right: Validate Keycloak's access token stored in the session (public key, expiration date)

  "API Gateway" -> "Gitlab/JupyterHub": /api/version/some_resource (GitLab/JupyterHub user's access token)
  activate "Gitlab/JupyterHub"

  "Gitlab/JupyterHub" -> "Gitlab/JupyterHub"
  note right: Process request

  "API Gateway" <- "Gitlab/JupyterHub": API response
  deactivate "Gitlab/JupyterHub"

  UI <- "API Gateway": API response
  deactivate "API Gateway"

== User logout ==

  UI -> "API Gateway": open in browser: /api/auth/logout
  activate "API Gateway"

  "API Gateway" -> "Keycloak": redirect logout

  "API Gateway" -[BLUE]> Redis: clear all user's tokens
  deactivate "API Gateway"

  UI <- "Keycloak": redirect

  ...can be repeated with Gitlab and JupyterHub logout urls...

@enduml
