#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# RENKU documentation build configuration file, created by
# sphinx-quickstart on Tue Aug 22 10:42:25 2017.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import glob
import os
import sys
from os.path import abspath, join, dirname
from pathlib import Path

sys.path.insert(0, abspath(join(dirname(__file__))))
sys.path.append(abspath(join(dirname(__file__), "renku-python/docs/_ext")))

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "cheatsheet",
    "plantweb.directive",
    "sphinx_click",
    "sphinx_copybutton",
    "sphinx_panels",
    "sphinx_rtd_theme",
    "sphinx.ext.autodoc",
    "sphinx.ext.coverage",
    "sphinx.ext.doctest",
    "sphinx.ext.githubpages",
    "sphinx.ext.graphviz",
    "sphinx.ext.ifconfig",
    "sphinx.ext.napoleon",
    "sphinx.ext.todo",
    "sphinx.ext.viewcode",
    "sphinxcontrib.mermaid",
    "sphinxcontrib.spelling",
]

# Plantweb configuration
plantweb_defaults = {"format": "png"}

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = [".rst", ".md"]

# The master toctree document.
master_doc = "index"

# General information about the project.
project = "Renku"
copyright = "2017-2022, Swiss Data Science Center"
author = (
    "Mohammad Alisafaee, Andreas Bleuler, Eric Bouillet, \n"
    "Lorenzo Cavazzi, Christine Choirat, Jakub Chrobasik, Andrea Cordoba, Alessandro Degano, \n"
    "Pamela Delgado, Julien Eberle, Virginia Friedrich, Viktor Gal, \n"
    "Fotis Georgatos, Ralf Grubenmann, Emma Jablonski, Wesley Johnson, Laura Kinkead, \n"
    "Jiri Kuncar, David Kunzmann, Gavin Lee, Travis Lee, Cyril Matthey-Doret, Izabela Moise, Sean Murphy, Tasko Olevski, Samuel Picek, \n"
    "Chandrasekhar Ramakrishnan, Rok RoÅ¡kar, Sofiane Sarni, Tao Sun, \n"
    "Sandra Savchenko De Jong, Johann-Michael Thiebaut, Olivier Verscheure"
)

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = os.environ.get("READTHEDOCS_VERSION", "latest")
# The full version, including alpha/beta/rc tags.
# release = "0.7.0"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["_build/*", "**/.github", "**/.eggs", ".venv/*", "README.md"]

# append renku-python except for its docs
exclude_patterns += [str(p) for p in glob.glob("renku-python/*") if p not in {"renku-python/docs"}]

allowed_set = {
    Path("renku-python/docs/reference/commands.rst"),
    Path("renku-python/docs/reference/api.rst"),
    Path("renku-python/docs/plugins.rst"),
    Path("renku-python/docs/reference/plugins.rst"),
    Path("renku-python/docs/how-to-guides/implementing_a_provider.rst"),
    Path("renku-python/docs/how-to-guides/hpc.rst"),
}

# add all models
allowed_set |= set(Path("renku-python").rglob("docs/reference/**/*.rst"))

exclude_patterns += [str(p) for p in Path("renku-python").rglob("*.rst") if p not in allowed_set]

# The name of the Pygments (syntax highlighting) style to use.
# pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# Figure numbering
numfig = True

# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "renku"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    "logo_only": True,
    "display_version": True,
    "prev_next_buttons_location": "bottom",
    "style_external_links": False,
    # Toc options
    "collapse_navigation": True,
    "sticky_navigation": True,
    "navigation_depth": 4,
    "includehidden": True,
    "titles_only": False,
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

# These paths are either relative to html_static_path
# or fully qualified paths (eg. https://...)
html_css_files = ["css/override-theme.css"]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# This is required for the alabaster theme
# refs: http://alabaster.readthedocs.io/en/latest/installation.html#sidebars
html_sidebars = {
    "**": [
        "about.html",
        "navigation.html",
        "relations.html",  # needs 'show_related': True theme option to display
        "searchbox.html",
        "donate.html",
    ]
}

html_logo = "_static/icons/logo.svg"

html_favicon = "_static/icons/favicon.ico"

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "RENKUdoc"

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        "RENKU.tex",
        "RENKU Documentation",
        author,
        "manual",
    )
]

# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "renku", "RENKU Documentation", [author], 1)]

# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "RENKU",
        "RENKU Documentation",
        author,
        "RENKU",
        "One line description of project.",
        "Miscellaneous",
    )
]

# spellchecking config
spelling_show_suggestions = True
spelling_lang = "en_US"

# graphviz config
graphviz_output_format = "svg"

# suppress the warning about graph being overriden
suppress_warnings = ["app.add_directive"]

# copybutton config
copybutton_prompt_text = r">>> |\.\.\. |\$ |In \[\d*\]: | {2,5}\.\.\.: | {5,8}: "
copybutton_prompt_is_regexp = True

# Autodoc configuraton.
autoclass_content = "both"
autodoc_mock_imports = ["persistent", "ZODB", "calamus"]
autodoc_typehints = "none"
autodoc_typehints_description_target = "documented"

# Napoleon (Google style) settings
napoleon_google_docstring = True
napoleon_numpy_docstring = False

# sphinx type references only work for types that documentation is generated for
# Suppress warnings for these types that are referenced but not documented themselves.
nitpick_ignore = [
    ("py:class", "CommandResult"),
    ("py:class", "CommunicationCallback"),
    ("py:class", "datetime"),
    ("py:class", "DiGraph"),
    ("py:class", "DynamicProxy"),
    ("py:class", "IActivityGateway"),
    ("py:class", "IClientDispatcher"),
    ("py:class", "IDatabaseDispatcher"),
    ("py:class", "IDatasetGateway"),
    ("py:class", "IPlanGateway"),
    ("py:class", "LocalClient"),
    ("py:class", "NoValueType"),
    ("py:class", "OID_TYPE"),
    ("py:class", "Path"),
    ("py:class", "Persistent"),
    ("py:class", "optional"),
    ("py:class", '"LocalClient"'),
    ("py:class", '"ValueResolver"'),
    ("py:class", "IStorageFactory"),
    ("py:exc", "errors.ParameterError"),
]

nitpick_ignore_regex = [
    (r"py:.*", r"calamus.*"),
    (r"py:.*", r"docker.*"),
    (r"py:.*", r"marshmallow.*"),
    (r"py:.*", r"persistent.*"),
    (r"py:.*", r"yaml.*"),
    (r"py:.*", r"abc.*"),
    (r"py:.*", r"collections.*"),
    (r"py:.*", r"enum.*"),
    (r"py:.*", r"pathlib.*"),
    (r"py:.*", r"contextlib.*"),
]
