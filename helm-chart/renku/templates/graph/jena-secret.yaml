{{- $jenaAdminPwd := default (randAlphaNum 64) .Values.jena.users.admin.password | quote }}
{{- $jenaRenkuPwd := default (randAlphaNum 64) .Values.jena.users.renku.password | quote }}

{{- if or (not .Values.jena.users.admin.password) (not .Values.jena.users.renku.password) -}}
{{- $secretName := include "renku.graph.jena.fullname" . -}}
{{- $secret := (lookup "v1" "Secret" .Release.Namespace $secretName) }}
{{- if $secret }}
{{- $jenaAdminPwd = index $secret.data "jena-users-admin-password" }}
{{- $jenaRenkuPwd = index $secret.data "jena-users-renku-password" }}
{{- end -}}
{{- end -}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ template "renku.graph.jena.fullname" . }}
  labels:
    app: {{ template "renku.graph.jena.name" . }}
    chart: {{ template "renku.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
type: Opaque
stringData:
  jena-users-admin-password: {{ $jenaAdminPwd }}
  jena-users-renku-password: {{ $jenaRenkuPwd }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shiro-ini
  labels:
    app: {{ template "renku.graph.jena.name" . }}
    chart: {{ template "renku.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
data:
  shiro.ini: |-
    [main]
    # Development
    ssl.enabled = false

    plainMatcher=org.apache.shiro.authc.credential.SimpleCredentialsMatcher
    iniRealm.credentialsMatcher = $plainMatcher

    [users]
    admin={{ $jenaAdminPwd }}
    renku={{ $jenaRenkuPwd }}

    [roles]

    [urls]
    ## Control functions open to anyone
    /$/status = anon
    /$/ping   = anon

    ## and the rest are restricted
    /$/** = authcBasic,user[admin]
    /renku/** = authcBasic,user[renku]
    /projects/** = authcBasic,user[renku]
    /migrations/** = authcBasic,user[admin]
