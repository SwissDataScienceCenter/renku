{{- if .Values.gitlab.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-post-install-gitlab"
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ template "renku.chart" . }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "20"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      name: "{{.Release.Name}}-post-install-gitlab"
      labels:
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        chart: {{ template "renku.chart" . }}
    spec:
      restartPolicy: Never
      containers:
        - name: configure-gitlab
          image: "{{ .Values.initDb.image.repository }}:{{ .Values.initDb.image.tag }}"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          command: ["/bin/bash", "/scripts/init-gitlab.sh"]
          volumeMounts:
            - name: init
              mountPath: /scripts
              readOnly: true
          env:
          - name: PGDATABASE
            value: {{ .Values.global.gitlab.postgresDatabase }}
          - name: PGUSER
            value: {{ .Values.global.gitlab.postgresUser }}
          - name: PGHOST
            value: {{ template "postgresql.fullname" . }}
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ template "renku.fullname" . }}-gitlab-postgres
                key: gitlab-postgres-password
          - name: GATEWAY_GITLAB_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: {{ template "renku.fullname" . }}
                key: gateway-gitlab-client-secret
      volumes:
        - name: init
          configMap:
            name: {{ template "renku.fullname" . }}
{{- end }}
