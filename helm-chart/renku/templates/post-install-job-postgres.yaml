apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-post-install-postgres"
  labels:
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
    chart: {{ template "renku.chart" . }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      name: "{{.Release.Name}}-post-install-postgres"
      labels:
        app: post-install-postgres
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        chart: {{ template "renku.chart" . }}
    spec:
      restartPolicy: Never
      containers:
        - name: init-databases
          image: "{{ .Values.initDb.image.repository }}:{{ .Values.initDb.image.tag }}"
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            runAsNonRoot: true
          command: ["/bin/bash", "/scripts/init-postgres.sh"]
          volumeMounts:
            - name: scripts
              mountPath: /scripts
              readOnly: true
            - name: passwords
              mountPath: /passwords
            - name: keycloak-postgres
              mountPath: /keycloak-postgres
              readOnly: true
            {{- if .Values.gitlab.enabled }}
            - name: gitlab-postgres
              mountPath: /gitlab-postgres
              readOnly: true
            {{- end }}
            - name: graph-db-postgres
              mountPath: /graph-db-postgres
              readOnly: true
            - name: graph-token-postgres
              mountPath: /graph-token-postgres
              readOnly: true
          env:
          - name: PGHOST
            value: {{ template "postgresql.fullname" . }}
          - name: PGUSER
            {{ if .Values.global.externalServices.postgresql.enabled }}
            value: {{ .Values.global.externalServices.postgresql.username }}
            {{- else -}}
            value: {{ .Values.postgresql.postgresqlUsername }}
            {{- end }}
          - name: PGPASSWORD
            {{- if not .Values.global.externalServices.postgresql.enabled }}
            valueFrom:
              secretKeyRef:
                name: {{ template "postgresql.fullname" . }}
                key: postgresql-password
            {{- else if .Values.global.externalServices.postgresql.password }}
            value: {{ .Values.global.externalServices.postgresql.password }}
            {{- else if .Values.global.externalServices.postgresql.existingSecret }}
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.externalServices.postgresql.existingSecret }}
                key: postgresql-password
            {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ template "renku.fullname" . }}
        - name: passwords
          secret:
            secretName: {{ template "renku.fullname" . }}
        - name: keycloak-postgres
          secret:
            secretName: renku-keycloak-postgres
        {{- if .Values.gitlab.enabled }}
        - name: gitlab-postgres
          secret:
            secretName: {{ template "renku.fullname" . }}-gitlab-postgres
        {{- end }}
        - name: graph-db-postgres
          secret:
            secretName: {{ template "renku.fullname" . }}-graph-db-postgres
        - name: graph-token-postgres
          secret:
            secretName: {{ template "renku.fullname" . }}-graph-token-postgres
