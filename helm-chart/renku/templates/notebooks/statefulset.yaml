apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "renku.notebooks.fullname" . }}
  labels:
    app: {{ template "renku.notebooks.name" . }}
    chart: {{ template "renku.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  {{- if not .Values.notebooks.autoscaling.enabled }}
  replicas: {{ .Values.notebooks.replicaCount }}
  {{- end }}
  serviceName: {{ template "renku.notebooks.fullname" . }}
  selector:
    matchLabels:
      app: {{ template "renku.notebooks.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "renku.notebooks.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/notebooks/configmap.yaml") . | sha256sum }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.notebooks.image.repository }}:{{ .Values.notebooks.image.tag }}"
          imagePullPolicy: {{ .Values.notebooks.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          envFrom:
            - secretRef:
                name: {{ template "renku.notebooks.fullname" . }}
          env:
            {{ if eq .Values.global.debug true }}
            - name: FLASK_DEBUG
              value: "1"
            {{ end }}
            - name: NB_SENTRY__ENABLED
              value: {{ .Values.notebooks.sentry.enabled | quote }}
            - name: NB_SENTRY__DSN
              value: {{ .Values.notebooks.sentry.dsn | quote }}
            - name: NB_SENTRY__ENV
              value: {{ .Values.notebooks.sentry.environment | quote }}
            - name: NB_SENTRY__SAMPLE_RATE
              value: {{ .Values.notebooks.sentry.sampleRate | quote }}
            - name: SENTRY_RELEASE
              value: {{ .Chart.Version | quote }}
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            {{- include "certificates.env.python" . | nindent 12 }}
            - name: NB_DUMMY_STORES
              value: {{ .Values.notebooks.dummyStores | quote }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          volumeMounts:
            - name: server-options
              mountPath: /etc/renku-notebooks/server_options
            {{- include "certificates.volumeMounts.system" . | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /health
              port: http
            periodSeconds: 30
          resources:
            {{- toYaml .Values.notebooks.resources | nindent 12 }}
      initContainers:
        {{- include "certificates.initContainer" . | nindent 8 }}
        - name: k8s-resource-schema-migrations
          image: "{{ .Values.notebooks.image.repository }}:{{ .Values.notebooks.image.tag }}"
          imagePullPolicy: {{ .Values.notebooks.image.pullPolicy }}
          env:
            - name: CRD_GROUP
              value: {{ .Values.amalthea.crdApiGroup }}
            - name: CRD_VERSION
              value: {{ .Values.amalthea.crdApiVersion }}
            - name: CRD_PLURAL
              value: {{ .Values.amalthea.crdNames.plural }}
            - name: K8S_NAMESPACE
              value: {{ .Release.Namespace }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          command:
            - .venv/bin/python
          args:
            - resource_schema_migrations/run_all.py
      volumes:
        - name: server-options
          configMap:
            name: {{ template "renku.notebooks.fullname" . }}-options
        {{- include "certificates.volumes" . | nindent 8 }}

      serviceAccountName: {{ if .Values.notebooks.rbac.create }}"{{ template "renku.notebooks.fullname" . }}"{{ else }}"{{ .Values.notebooks.rbac.serviceAccountName }}"{{ end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | indent 8 }}
    {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - {{ template "renku.notebooks.name" . }}
                topologyKey: "kubernetes.io/hostname"
        {{- with .Values.affinity }}
        {{ toYaml . | indent 8 }}
        {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | indent 8 }}
      {{- end }}
      {{- if .Values.notebooks.image.pullSecrets }}
      imagePullSecrets:
      {{- range .Values.notebooks.image.pullSecrets }}
        - name: {{ . }}
      {{- end}}
      {{- end }}
