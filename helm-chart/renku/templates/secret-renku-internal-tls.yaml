{{- $renkuFullname := include "renku.fullname" . -}}
{{- $ca := genCA "renku-ca" 3650000 }}
{{- $authz_svc_name := cat $renkuFullname "-authz" | nospace -}}
{{- $authz_cert := genSignedCert $authz_svc_name nil (list $authz_svc_name) 3650000 $ca }}
{{- $ca_crt := $ca.Cert | b64enc | quote }}
{{- $ca_key := $ca.Key | b64enc | quote }}
{{- $authz_crt := $authz_cert.Cert | b64enc | quote }}
{{- $authz_key := $authz_cert.Key | b64enc | quote }}

{{- $secretCAName := include "renku.CASecretName" . }}
{{- $secretAuthzCertName := include "renku.authz.tlsSecretName" . }}
{{- $secretCA := (lookup "v1" "Secret" .Release.Namespace $secretCAName) }}
{{- $secretAuthzCert := (lookup "v1" "Secret" .Release.Namespace $secretAuthzCertName) }}

{{- if $secretCA }}
{{- $ca_key = index $secretCA.data "tls.key" }}
{{- $ca_crt = index $secretCA.data "tls.crt" }}
{{- end -}}
{{- if and $secretCA $secretAuthzCert }}
{{- $authz_key = index $secretAuthzCert.data "tls.key" }}
{{- $authz_crt = index $secretAuthzCert.data "tls.crt" }}
{{- end -}}

apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretCAName }}
  labels:
    app: {{ template "renku.name" . }}
    chart: {{ template "renku.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade,pre-rollback"
type: kubernetes.io/tls
data:
  tls.key: {{ $ca_key }}
  tls.crt: {{ $ca_crt }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretAuthzCertName }}
  labels:
    app: {{ template "renku.name" . }}
    chart: {{ template "renku.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade,pre-rollback"
type: kubernetes.io/tls
data:
  tls.key: {{ $authz_key }}
  tls.crt: {{ $authz_crt }}
