name: Build global base images

on:
  push:
    paths:
      - "global-images/**"
      - ".github/workflows/build-global-renkulab-images.yml"
    branches:
      - "**"
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

env:
  DOCKER_PREFIX: ghcr.io/swissdatasciencecenter/renku
  BUILDER_IMAGE: ghcr.io/swissdatasciencecenter/renku-frontend-buildpacks/selector:0.0.8
  RUN_IMAGE: ghcr.io/swissdatasciencecenter/renku-frontend-buildpacks/base-image:0.0.8
jobs:
  build-images:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: true
      matrix:
        FLAVOR:
          - basic
          - datascience
        FRONTEND:
          - jupyterlab
          - vscodium
          - ttyd
    steps:
      - uses: actions/checkout@v5
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_PREFIX }}/py-${{ matrix.FLAVOR }}-${{ matrix.FRONTEND }}
          tags: |
            type=sha,prefix=
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=semver,pattern={{version}},event=tag
      - uses: buildpacks/github-actions/setup-pack@v5.9.3
      - name: Build image
        run: |
          tags=$(echo "${{ steps.meta.outputs.tags }}" | tr '\n' ',')
          tags=${tags::-1}

          # publish only on pushes to master or release tags
          PUBLISH=0
          EXTRA_FLAGS=""
          if [[ "${GITHUB_REF}" == "refs/heads/master" ]]; then
            PUBLISH=1
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            PUBLISH=1
          fi
          [ "${PUBLISH:-}" = "1" ] && EXTRA_FLAGS="--cache-image ${{ env.DOCKER_PREFIX }}/py-${{ matrix.FLAVOR }}-${{ matrix.FRONTEND }}-cache:latest"

          TAGS=$tags \
          FRONTEND=${{ matrix.FRONTEND }} \
          RUN_IMAGE=${{ env.RUN_IMAGE }} \
          BUILDER=${{ env.BUILDER_IMAGE }} \
          PUBLISH=$PUBLISH \
          EXTRA_FLAGS=$EXTRA_FLAGS \
          make -C global-images ${{ matrix.FLAVOR }}
