name: Publish and deploy on staging

on:
  push:
    tags: ["*"]
  workflow_dispatch:

jobs:
  publish-chart:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - uses: ./actions/publish-chart
        env:
          CHART_DIR: helm-chart/
          CHART_NAME: renku
          GIT_USER: chart-bot
          GIT_EMAIL: chart-bot@example.com
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.RENKU_CI_TOKEN }}
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: job,ref
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_JOB} version ${{ steps.vars.outputs.tag }}: ${{ job.status }}.`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  staging-deployment:
    runs-on: "ubuntu-latest"
    needs:
      - "publish-chart"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: "Deploy"
        uses: "deliverybot/helm@v1"
        with:
          release: "staging-renku"
          namespace: "staging"
          chart: "renku"
          helm: "helm3"
          version: "${{ steps.vars.outputs.tag }}"
          repository: "https://swissdatasciencecenter.github.io/helm-charts"
          token: "${{ github.token }}"
          values: |
            ${{ secrets.STAGING_VALUES_FILE }}
        env:
          KUBECONFIG_FILE: "${{ secrets.RENKUBOT_DEV_KUBECONFIG }}"
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_JOB} version ${{ steps.vars.outputs.tag }}: ${{ job.status }}.`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()

  acceptance-tests:
    runs-on: ubuntu-latest
    needs:
      - "staging-deployment"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set version
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Acceptance tests
        env:
          KUBECONFIG: ${{ github.workspace }}/renkubot-kube.config
          RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_DEV_KUBECONFIG }}
        run: |
          echo "$RENKUBOT_KUBECONFIG" > renkubot-kube.config
          helm test staging-renku --namespace staging --timeout 80m --logs
      - name: Download artifact for packaging on failure
        if: failure()
        uses: ./actions/download-test-artifacts
        env:
          RENKU_VALUES: ${{ secrets.STAGING_VALUES_FILE }}
          TEST_ARTIFACTS_PATH: "staging-test-artifacts"
      - name: Upload screenshots on failure
        if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: acceptance-test-artifacts
          path: ${{ github.workspace }}/test-artifacts/
      - uses: 8398a7/action-slack@v3
        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_JOB} version ${{ steps.vars.outputs.tag }}: ${{ job.status }}.`,
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
