name: Test PR
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
      - edited
  merge_group:

permissions:
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}-azure
  cancel-in-progress: false 

jobs:
  check-deploy:
    name: Analyze deploy string Azure
    runs-on: ubuntu-24.04
    outputs:
      pr-contains-string: ${{ steps.deploy-comment.outputs.pr-contains-string }}
      renku-core: ${{ steps.deploy-comment.outputs.renku-core}}
      renku-gateway: ${{ steps.deploy-comment.outputs.renku-gateway}}
      renku-graph: ${{ steps.deploy-comment.outputs.renku-graph}}
      renku-notebooks: ${{ steps.deploy-comment.outputs.renku-notebooks}}
      renku-ui: ${{ steps.deploy-comment.outputs.renku-ui}}
      renku-data-services: ${{ steps.deploy-comment.outputs.renku-data-services}}
      amalthea: ${{ steps.deploy-comment.outputs.amalthea}}
      amalthea-sessions: ${{ steps.deploy-comment.outputs.amalthea-sessions}}
      test-enabled: ${{ steps.deploy-comment.outputs.test-enabled}}
      extra-values: ${{ steps.deploy-comment.outputs.extra-values}}
    steps:
      - uses: actions/checkout@v4.1.7
      - id: deploy-comment
        uses: SwissDataScienceCenter/renku-actions/check-pr-description@v1.15.1
        with:
          string: /AzureDeploy
          pr_ref: ${{ github.event.number }}

  deploy-pr:
    name: Deploy on Azure
    if: github.event.action != 'closed'
    needs: [check-deploy]
    runs-on: ubuntu-24.04
    # environment:
    #   name: ci-renku-${{ github.event.number }}
    #   url: https://ci-renku-${{ github.event.number }}.dev.azure.renku.ch
    steps:
      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.CI_RENKU_AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.CI_RENKU_AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.CI_RENKU_AZURE_SUBSCRIPTION_ID }}
      - uses: azure/aks-set-context@v4
        with:
          resource-group: "renku-dev"
          cluster-name: "aks-switzerlandnorth-renku-dev"
      - uses: actions/checkout@v4.1.7

      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group renku-dev --name aks-switzerlandnorth-renku-dev --file "${{ github.workspace }}/renkubot-kube.config"
          chmod 600 "${{ github.workspace }}/renkubot-kube.config"

          # Create a multiline env var with the content for RENKUBOT_KUBECONFIG
          echo "RENKUBOT_KUBECONFIG<<EOF" >> $GITHUB_ENV
          cat "${{ github.workspace }}/renkubot-kube.config" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Test kubectl connection
        run: |
          export KUBECONFIG="${{ github.workspace }}/renkubot-kube.config"
          kubectl get nodes
      - name: renku build and deploy
        if: needs.check-deploy.outputs.pr-contains-string == 'true'
        uses: SwissDataScienceCenter/renku-actions/deploy-renku@v1.18.0
        env:
          DOCKER_PASSWORD: ${{ secrets.RENKU_DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.RENKU_DOCKER_USERNAME }}
          GITLAB_TOKEN: ${{ secrets.DEV_GITLAB_TOKEN }}
          KUBECONFIG: "${{ github.workspace }}/renkubot-kube.config"
          KUBERNETES_CLUSTER_FQDN: dev.azure.renku.ch
          RENKU_ANONYMOUS_SESSIONS: true
          RENKU_RELEASE: ci-renku-${{ github.event.number }}
          RENKU_VALUES_FILE: "${{ github.workspace }}/values.yaml"
          RENKU_VALUES: minimal-deployment/minimal-deployment-values.yaml
          RENKUBOT_KUBECONFIG: ${{ env.RENKUBOT_KUBECONFIG }}
          TEST_ARTIFACTS_PATH: "tests-artifacts-${{ github.sha }}"
          ENABLE_NGINX_INGRESS: true
          renku: "@${{ github.head_ref }}"
          renku_core: "${{ needs.check-deploy.outputs.renku-core }}"
          renku_gateway: "${{ needs.check-deploy.outputs.renku-gateway }}"
          renku_graph: "${{ needs.check-deploy.outputs.renku-graph }}"
          renku_notebooks: "${{ needs.check-deploy.outputs.renku-notebooks }}"
          renku_ui: "${{ needs.check-deploy.outputs.renku-ui }}"
          renku_data_services: "${{ needs.check-deploy.outputs.renku-data-services }}"
          amalthea: "${{ needs.check-deploy.outputs.amalthea }}"
          amalthea_sessions: "${{ needs.check-deploy.outputs.amalthea-sessions }}"
          extra_values: "${{ needs.check-deploy.outputs.extra-values }}"
      - name: Check existing renkubot comment
        if: needs.check-deploy.outputs.pr-contains-string == 'true'
        uses: peter-evans/find-comment@v3
        id: findcomment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "RenkuBot"
      - name: Create comment pre deploy
        if: ${{ steps.findcomment.outputs.comment-id == 0 &&
          needs.check-deploy.outputs.pr-contains-string == 'true' }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.RENKUBOT_GITHUB_TOKEN }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            You can access the deployment of this PR at https://ci-renku-${{ github.event.number }}.dev.azure.renku.ch

  cypress-acceptance-tests:
    name: Cypress tests on Azure
    needs: [check-deploy, deploy-pr]
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        tests:
          [
            anonymousNavigation,
            dashboardV2,
            groupBasics,
            projectBasics,
            projectResources,
            searchEntities,
            sessionBasics,
          ]
    steps:
      - uses: SwissDataScienceCenter/renku-actions/test-renku-cypress@v1.18.0
        if: github.event.action != 'closed' && needs.check-deploy.outputs.pr-contains-string == 'true' && needs.check-deploy.outputs.test-enabled == 'true'
        with:
          e2e-folder: cypress/e2e/v2/
          e2e-target: ${{ matrix.tests }}
          kubernetes-cluster-fqdn: dev.azure.renku.ch
          renku-reference: ${{ github.ref }}
          renku-release: ci-renku-${{ github.event.number }}
          test-user-password: ${{ secrets.RENKU_BOT_DEV_PASSWORD }}


  deploy-string-no-custom-version:
    name: Ensure no custom components
    needs: [check-deploy]
    runs-on: ubuntu-24.04
    steps:
      - name: Check deploy string
        if: ${{
          needs.check-deploy.outputs.pr-contains-string == 'true'
          && startsWith(github.base_ref, 'release-')
          && (
          needs.check-deploy.outputs.renku-core != null
          || needs.check-deploy.outputs.renku-gateway != null
          || needs.check-deploy.outputs.renku-graph != null
          || needs.check-deploy.outputs.renku-notebooks != null
          || needs.check-deploy.outputs.renku-ui != null
          || needs.check-deploy.outputs.renku-data-services != null
          )
          }}
        uses: actions/github-script@v7
        with:
          script: core.setFailed('Cannot merge release PR if it still has custom versions in deploy string.')
  cleanup:
    name: Cleanup
    if: github.event.action == 'closed'
    runs-on: ubuntu-24.04
    steps:
      - name: renku teardown
        uses: SwissDataScienceCenter/renku-actions/cleanup-renku-ci-deployments@v1.15.1
        env:
          HELM_RELEASE_REGEX: "^ci-renku-${{ github.event.number }}$"
          GITLAB_TOKEN: ${{ secrets.DEV_GITLAB_TOKEN }}
          RENKUBOT_KUBECONFIG: ${{ secrets.RENKUBOT_DEV_KUBECONFIG }}
          MAX_AGE_SECONDS: 0
          DELETE_NAMESPACE: "true"
